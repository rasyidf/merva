import type { User, Role, Permission } from "../types";

// Mock permissions
export const mockPermissions: Permission[] = [
    {
        id: "perm-1",
        name: "View Users",
        description: "Can view user list and details",
        resource: "users",
        action: "read",
        isSystem: true,
    },
    {
        id: "perm-2",
        name: "Create Users",
        description: "Can create new users",
        resource: "users",
        action: "create",
        isSystem: true,
    },
    {
        id: "perm-3",
        name: "Edit Users",
        description: "Can edit existing users",
        resource: "users",
        action: "update",
        isSystem: true,
    },
    {
        id: "perm-4",
        name: "Delete Users",
        description: "Can delete users",
        resource: "users",
        action: "delete",
        isSystem: true,
    },
    {
        id: "perm-5",
        name: "View Roles",
        description: "Can view role list and details",
        resource: "roles",
        action: "read",
        isSystem: true,
    },
    {
        id: "perm-6",
        name: "Create Roles",
        description: "Can create new roles",
        resource: "roles",
        action: "create",
        isSystem: true,
    },
    {
        id: "perm-7",
        name: "Edit Roles",
        description: "Can edit existing roles",
        resource: "roles",
        action: "update",
        isSystem: true,
    },
    {
        id: "perm-8",
        name: "Delete Roles",
        description: "Can delete roles",
        resource: "roles",
        action: "delete",
        isSystem: true,
    },
    {
        id: "perm-9",
        name: "Manage System Settings",
        description: "Can manage system settings",
        resource: "system",
        action: "manage",
        isSystem: true,
    },
    {
        id: "perm-10",
        name: "View Reports",
        description: "Can view reports",
        resource: "reports",
        action: "read",
        isSystem: true,
    },
    {
        id: "perm-11",
        name: "Create Reports",
        description: "Can create reports",
        resource: "reports",
        action: "create",
        isSystem: true,
    },
    {
        id: "perm-12",
        name: "Manage All",
        description: "Full system access",
        resource: "system",
        action: "manage",
        isSystem: true,
    }
];

// Mock roles
export const mockRoles: Role[] = [
    {
        id: "role-1",
        name: "Administrator",
        description: "Full system access with all permissions",
        permissions: mockPermissions.filter(p => p.id === "perm-12"),
        isSystem: true,
        createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
        id: "role-2",
        name: "User Manager",
        description: "Can manage users but not roles or system settings",
        permissions: mockPermissions.filter(p => ["perm-1", "perm-2", "perm-3", "perm-4"].includes(p.id)),
        isSystem: true,
        createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
        id: "role-3",
        name: "Viewer",
        description: "Read-only access to users and roles",
        permissions: mockPermissions.filter(p => ["perm-1", "perm-5"].includes(p.id)),
        isSystem: true,
        createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
    },
    {
        id: "role-4",
        name: "Analytics Manager",
        description: "Can view and create reports",
        permissions: mockPermissions.filter(p => ["perm-1", "perm-10", "perm-11"].includes(p.id)),
        isSystem: false,
        createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000).toISOString(),
    }
];

// Mock users
export const mockUsers: User[] = [
    {
        id: "user-1",
        username: "admin",
        email: "admin@example.com",
        fullName: "System Administrator",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-1.png",
        status: "active",
        roles: [mockRoles?.[0] ?? {} as Role], // Administrator role
        createdAt: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date().toISOString(),
        department: "IT",
        position: "System Administrator",
        bio: "Main system administrator with full access",
    },
    {
        id: "user-2",
        username: "jsmith",
        email: "john.smith@example.com",
        fullName: "John Smith",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-2.png",
        status: "active",
        roles: [mockRoles[1] ?? {} as Role], // User Manager role
        createdAt: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
        department: "Human Resources",
        position: "HR Manager",
        bio: "Human resources manager responsible for staff management",
    },
    {
        id: "user-3",
        username: "mjohnson",
        email: "mary.johnson@example.com",
        fullName: "Mary Johnson",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-3.png",
        status: "active",
        roles: [mockRoles[3] ?? {} as Role], // Analytics Manager role
        createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
        department: "Marketing",
        position: "Marketing Analyst",
        bio: "Marketing analyst focused on data-driven strategies",
    },
    {
        id: "user-4",
        username: "rwilliams",
        email: "robert.williams@example.com",
        fullName: "Robert Williams",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-4.png",
        status: "inactive",
        roles: [mockRoles[2] ?? {} as Role], // Viewer role
        createdAt: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
        department: "Sales",
        position: "Sales Representative",
        bio: "Experienced sales professional",
    },
    {
        id: "user-5",
        username: "jdoe",
        email: "jane.doe@example.com",
        fullName: "Jane Doe",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-5.png",
        status: "pending",
        roles: [mockRoles[2] ?? {} as Role], // Viewer role
        createdAt: new Date().toISOString(),
        department: "Finance",
        position: "Financial Analyst",
        bio: "New hire in the finance department",
    },
    {
        id: "user-6",
        username: "dbrown",
        email: "david.brown@example.com",
        fullName: "David Brown",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-6.png",
        status: "suspended",
        roles: [mockRoles[2] ?? {} as Role], // Viewer role
        createdAt: new Date(Date.now() - 120 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000).toISOString(),
        department: "Operations",
        position: "Operations Manager",
        bio: "Operations manager currently on leave",
    },
    {
        id: "user-7",
        username: "swilson",
        email: "sarah.wilson@example.com",
        fullName: "Sarah Wilson",
        avatarUrl: "https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/avatars/avatar-7.png",
        status: "active",
        roles: [mockRoles[1] ?? {} as Role, mockRoles[3] ?? {} as Role], // User Manager + Analytics Manager roles
        createdAt: new Date(Date.now() - 75 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
        department: "Product",
        position: "Product Manager",
        bio: "Product manager with focus on user experience",
    },
    {
        id: "user-8",
        username: "mthompson",
        email: "michael.thompson@example.com",
        fullName: "Michael Thompson",
        avatarUrl: "",
        status: "active",
        roles: [mockRoles[2] ?? {} as Role], // Viewer role
        createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000).toISOString(),
        lastActive: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
        department: "Engineering",
        position: "Software Developer",
        bio: "Full stack developer with 5+ years experience",
    }
];